subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    
    group = 'test.group'
    version = '1'

    publishing.publications.create('publication', MavenPublication) {
        from components.java
    }
}

project(':test0') {
    configurations {
        create("shadowRuntimeElements") { config ->
            attributes {
                attribute(Bundling.BUNDLING_ATTRIBUTE, Bundling.SHADOWED)
            }
        }
        components.java {
            addVariantsFromConfiguration(config) {}
        }
    }
}

// configure test1, test2 and test3 to depend on test0 of which test2 requests a shadowed variant
for(i : 1..3)
    project(":test${value[0]}") {
        dependencies {
            implementation('test.group:test0:1') {
                attributes {
                    if(i == 2)
                        attribute(Bundling.BUNDLING_ATTRIBUTE, Bundling.SHADOWED)
                }
            }
        }
    }

project(':test4') {
    repositories { mavenLocal() }
    dependencies { implementation 'test.group:test3:1' }
}

repositories { mavenLocal() }

def resolveDependencies = { dependencyStrings ->
    
    Dependency[] dependencies = dependencyStrings.collect { dependency -> project.dependencies.create dependency }
    def configuration = configurations.detachedConfiguration(dependencies)
    
    configuration.resolutionStrategy {
        capabilitiesResolution.all {
            select candidates[0]
        }
    }
    configuration.resolve()
}

tasks.create('works') {
    doFirst {
        resolveDependencies(['test.group:test1:1', 'test.group:test2:1'])
    }
}

tasks.create('fails') {
    doFirst {
        resolveDependencies(['test.group:test1:1', 'test.group:test2:1', 'test.group:test4:1'])
    }
}
